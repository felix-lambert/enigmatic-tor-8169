{
  "name": "mongoose-elasticsearch",
  "version": "0.1.1",
  "description": "Mongoose elasticsearch bindings",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://bitbucket.org/pearlshare/mongoose-elasticsearch"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha --compilers coffee:coffee-script/register --colors --recursive test"
  },
  "keywords": [
    "Elasticsearch",
    "Mongoose",
    "Bluebird"
  ],
  "author": {
    "name": "Oliver Brooks"
  },
  "license": "MIT",
  "dependencies": {
    "bluebird": "^2.3.5",
    "coffee-script": "^1.4.x",
    "elasticsearch": "^2.4.3"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "^1.18.2",
    "mongoose": "^3.8.17"
  },
  "readme": "# MongooseElasticSearch\n\nBinds a mongoose model to an elasticsearch.\n\nI wanted a promise based library based on the official elasticsearch node client. There are other great alternatives such as mongooseElasticsearch, mongoosastic but they didn't fit my needs as I needed more flexiblity around setting the schema to use parent associations and complex analyzers. \n\n## Changes!!!\n\nsyntax change when defining plugins\n  \n    AnimalSchema.plugin mongooseElasticsearch.plugin(), {type: 'animal', mapping: elasticMapping}\n\n## Features\n\n* Optional automatic saving to elasticsearch\n* Optional automatic deletion from elasticsearch\n* Bulk indexing of a model to ES\n* Use a preconfigured elasticsearch client\n* Manually define elasticsearch mapping\n* Optional custom object to save (which can be a promise to populate fields)\n\n## Usage\n\n### Setup model\n\n./animal.coffee\n\n```coffee\n  mongoose = require(\"mongoose\")\n  MongooseElasticSearch = require(\"mongoose-elasticsearch\")\n  \n  # Generic setup\n  elasticsearch = require(\"elasticsearch\") \n\n  # can put the elasticClient creation in an initializer\n  elasticClient = new elasticsearch.Client\n    host: \"localhost:9200\"\n    maxSockets: 2\n    sniffOnStart: true\n    sniffInterval: 60000\n    defer: () -> Q.defer()\n\n  # Can put the mongooseElasticsearch creation in an initializer\n  mongooseElasticsearch = new MongooseElasticSearch\n    index: 'animals'\n    client: elasticClient\n\n  # Exact elasticsearch mapping required for the object\n  elasticmapping =\n    properties:\n      name:\n        type: \"string\"\n      description:\n        type: \"string\"\n        analyzer: \"english\"\n      createdAt:\n        type: \"date\"\n\n  # Define mongoose schema\n  AnimalSchema = new mongoose.Schema\n    name:\n      type: String\n    description:\n      type: String\n    createdAt:\n      type: Date\n\n  # Add the plugin giving the type and \n  AnimalSchema.plugin mongooseElasticsearch.plugin(),\n    type: 'animal' \n    mapping: elasticMapping\n\n  model = mongoose.model \"Animal\", AnimalSchema\n```\n\n### Use model\n\n./test.coffee\n\n```coffee\n  Animal = require(\"./animal\")\n  animal = new Animal(name: 'Cheater', description: \"Freakin fast cat\", createdAt: new Date())\n\n  animal.save().then (animal) ->\n    # Standard elasticsearch query\n    query = \n      matchAll: {}\n\n    Animal.search(query).then (res) ->\n      console.log 'res', res\n\n```\n\n### Maintenance and migrations\n\n./tasks.coffee\n\n```coffee\n  elastic\n```",
  "readmeFilename": "README.md",
  "_id": "mongoose-elasticsearch@0.1.1",
  "dist": {
    "shasum": "e80f95e9ec600bcf92f2ba83a30722b5e70b61e5"
  },
  "_from": "mongoose-elasticsearch@",
  "_resolved": "https://registry.npmjs.org/mongoose-elasticsearch/-/mongoose-elasticsearch-0.1.1.tgz"
}
